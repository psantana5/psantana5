name: Find Largest Repositories by Commits

on:
  schedule:
    - cron: "0 0 * * *" # Runs daily at midnight
  workflow_dispatch:

jobs:
  find-largest-repos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install axios

      - name: Fetch and Update README
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node -e "
          const fs = require(\"fs\");
          const axios = require(\"axios\");
          const token = process.env.GITHUB_TOKEN;

          axios.get(\"https://api.github.com/users/psantana5/repos\", {
            headers: { Authorization: \"token \" + token }
          }).then(async response => {
            const repos = response.data;
            const commitCounts = await Promise.all(repos.map(async repo => {
              // Add description to the returned object
              const commits = await axios.get(repo.commits_url.replace(\"{/sha}\", \"\"), {
                headers: { Authorization: \"token \" + token }
              });
              return { 
                name: repo.name, 
                commits: commits.data.length,
                description: repo.description // Add this line
              };
            }));
            
            const largestRepos = commitCounts.sort((a, b) => b.commits - a.commits).slice(0, 3);
            const readmePath = \"README.md\";
            let readmeContent = fs.readFileSync(readmePath, \"utf8\");
            
            // Generate markdown list
            const projectsList = largestRepos.map(repo => 
              \"- [**\" + repo.name + \"**](https://github.com/psantana5/\" + repo.name + \") - \" + 
              (repo.description ? repo.description.replace(/\"/g, \"'\") : \"HPC-related project focusing on efficient computing solutions\")
            ).join(\"\\n\");

            // Update README content
            readmeContent = readmeContent.replace(
              /<!-- DYNAMIC_REPOS_START -->[\\s\\S]*<!-- DYNAMIC_REPOS_END -->/,
              \"<!-- DYNAMIC_REPOS_START -->\\n\" + projectsList + \"\\n<!-- DYNAMIC_REPOS_END -->\"
            );
            
            fs.writeFileSync(readmePath, readmeContent);
          }).catch(error => console.error(error));
          "

      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@users.noreply.github.com"
          git add README.md
          git commit -m "github-bot: Update README.md with largest repos by commits"
          git push
